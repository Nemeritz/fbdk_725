<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE FBType SYSTEM "http://www.holobloc.com/xml/LibraryElement.dtd" >
<FBType Name="RingTokenMember" Comment="Basic Function Block Type" >
  <Identification Standard="61499-2" />
  <VersionInfo Organization="Rockwell Automation" Version="0.2" Author="JHC" Date="2003-12-04" Remarks="Renamed for better indexing." />
  <VersionInfo Organization="Rockwell Automation" Version="0.1" Author="JHC" Date="2002-11-05" Remarks="Corrected missing ST element in Algorithm REQ." />
  <VersionInfo Organization="Rockwell Automation" Version="0.0" Author="JHC" Date="2000-05-30" />
  <CompilerInfo header="package fb.rt.cs725;" >
  </CompilerInfo>
  <InterfaceList>
    <EventInputs>
      <Event Name="INIT" Comment="Initialization Request" >
        <With Var="PERequest" />
        <With Var="TokenIn" />
        <With Var="PEExit" />
        <With Var="TokenJustChanged" />
      </Event>
      <Event Name="REQ" Comment="Normal Execution Request" >
        <With Var="PERequest" />
        <With Var="TokenIn" />
        <With Var="PEExit" />
        <With Var="TokenJustChanged" />
      </Event>
    </EventInputs>
    <EventOutputs>
      <Event Name="INITO" Comment="Initialization Confirm" >
        <With Var="Block" />
        <With Var="TokenOut" />
      </Event>
      <Event Name="CNF" Comment="Execution Confirmation" >
        <With Var="Block" />
        <With Var="TokenOut" />
      </Event>
    </EventOutputs>
    <InputVars>
      <VarDeclaration Name="PERequest" Type="BOOL" Comment="Input event qualifier" />
      <VarDeclaration Name="TokenIn" Type="BOOL" InitialValue="false" />
      <VarDeclaration Name="PEExit" Type="BOOL" />
      <VarDeclaration Name="TokenJustChanged" Type="BOOL" />
    </InputVars>
    <OutputVars>
      <VarDeclaration Name="Block" Type="BOOL" Comment="Output event qualifier" />
      <VarDeclaration Name="TokenOut" Type="BOOL" />
    </OutputVars>
  </InterfaceList>
  <BasicFB>
    <InternalVars>
      <VarDeclaration Name="lastTokenIn" Type="BOOL" InitialValue="true" />
      <VarDeclaration Name="lastPEExit" Type="BOOL" InitialValue="0" />
    </InternalVars>
    <ECC >
      <ECState Name="START" Comment="Initial State" x="555.55554" y="427.77777" >
      </ECState>
      <ECState Name="INIT" Comment="Initialization" x="922.22217" y="138.88889" >
        <ECAction Algorithm="INIT" Output="INITO" />
      </ECState>
      <ECState Name="REQ" Comment="Normal execution" x="216.66666" y="755.55554" >
        <ECAction Algorithm="REQ" Output="CNF" />
      </ECState>
      <ECTransition Source="START" Destination="INIT" Condition="INIT" x="922.22217" y="427.77777" />
      <ECTransition Source="INIT" Destination="START" Condition="1" x="555.55554" y="138.88889" />
      <ECTransition Source="START" Destination="REQ" Condition="REQ" x="555.55554" y="588.88885" />
      <ECTransition Source="REQ" Destination="START" Condition="1" x="216.66666" y="427.77777" />
    </ECC>
  <Algorithm Name="INIT" Comment="Initialization algorithm" >
    <Other Language="Java" Text="Block.value=false;&#10;TokenOut.value=false;&#10;System.out.println(&#34;init head, grant false, token true&#34;);&#10;" />
  </Algorithm>
  <Algorithm Name="REQ" Comment="Normally executed algorithm" >
    <Other Language="Java" Text="&#60;?xml version=&#34;1.0&#34; encoding=&#34;UTF-8&#34; ?>&#10;&#60;!DOCTYPE FBType SYSTEM &#34;http://www.holobloc.com/xml/LibraryElement.dtd&#34;>&#10;&#60;FBType Name=&#34;RingTokenMember&#34; Comment=&#34;Basic Function Block Type&#34;>&#10;    &#60;Identification Standard=&#34;61499-2&#34; />&#10;    &#60;VersionInfo Organization=&#34;Rockwell Automation&#34; Version=&#34;0.2&#34; Author=&#34;JHC&#34; Date=&#34;2003-12-04&#34; Remarks=&#34;Renamed for better indexing.&#34; />&#10;    &#60;VersionInfo Organization=&#34;Rockwell Automation&#34; Version=&#34;0.1&#34; Author=&#34;JHC&#34; Date=&#34;2002-11-05&#34; Remarks=&#34;Corrected missing ST element in Algorithm REQ.&#34; />&#10;    &#60;VersionInfo Organization=&#34;Rockwell Automation&#34; Version=&#34;0.0&#34; Author=&#34;JHC&#34; Date=&#34;2000-05-30&#34; />&#10;    &#60;CompilerInfo header=&#34;package fb.rt.cs725;&#34;>&#10;    &#60;/CompilerInfo>&#10;    &#60;InterfaceList>&#10;        &#60;EventInputs>&#10;            &#60;Event Name=&#34;INIT&#34; Comment=&#34;Initialization Request&#34;>&#10;                &#60;With Var=&#34;PERequest&#34; />&#10;                &#60;With Var=&#34;TokenIn&#34; />&#10;                &#60;With Var=&#34;PEExit&#34; />&#10;                &#60;With Var=&#34;TokenJustChanged&#34; />&#10;            &#60;/Event>&#10;            &#60;Event Name=&#34;REQ&#34; Comment=&#34;Normal Execution Request&#34;>&#10;                &#60;With Var=&#34;PERequest&#34; />&#10;                &#60;With Var=&#34;TokenIn&#34; />&#10;                &#60;With Var=&#34;PEExit&#34; />&#10;                &#60;With Var=&#34;TokenJustChanged&#34; />&#10;            &#60;/Event>&#10;        &#60;/EventInputs>&#10;        &#60;EventOutputs>&#10;            &#60;Event Name=&#34;INITO&#34; Comment=&#34;Initialization Confirm&#34;>&#10;                &#60;With Var=&#34;Block&#34; />&#10;                &#60;With Var=&#34;TokenOut&#34; />&#10;            &#60;/Event>&#10;            &#60;Event Name=&#34;CNF&#34; Comment=&#34;Execution Confirmation&#34;>&#10;                &#60;With Var=&#34;Block&#34; />&#10;                &#60;With Var=&#34;TokenOut&#34; />&#10;            &#60;/Event>&#10;        &#60;/EventOutputs>&#10;        &#60;InputVars>&#10;            &#60;VarDeclaration Name=&#34;PERequest&#34; Type=&#34;BOOL&#34; Comment=&#34;Input event qualifier&#34; />&#10;            &#60;VarDeclaration Name=&#34;TokenIn&#34; Type=&#34;BOOL&#34; InitialValue=&#34;false&#34; />&#10;            &#60;VarDeclaration Name=&#34;PEExit&#34; Type=&#34;BOOL&#34; />&#10;            &#60;VarDeclaration Name=&#34;TokenJustChanged&#34; Type=&#34;BOOL&#34; />&#10;        &#60;/InputVars>&#10;        &#60;OutputVars>&#10;            &#60;VarDeclaration Name=&#34;Block&#34; Type=&#34;BOOL&#34; Comment=&#34;Output event qualifier&#34; />&#10;            &#60;VarDeclaration Name=&#34;TokenOut&#34; Type=&#34;BOOL&#34; />&#10;        &#60;/OutputVars>&#10;    &#60;/InterfaceList>&#10;    &#60;BasicFB>&#10;        &#60;InternalVars>&#10;            &#60;VarDeclaration Name=&#34;lastTokenIn&#34; Type=&#34;BOOL&#34; InitialValue=&#34;true&#34; />&#10;            &#60;VarDeclaration Name=&#34;lastPEExit&#34; Type=&#34;BOOL&#34; InitialValue=&#34;0&#34; />&#10;            &#60;VarDeclaration Name=&#34;TokenChanged&#34; Type=&#34;BOOL&#34; InitialValue=&#34;true&#34; />&#10;        &#60;/InternalVars>&#10;        &#60;ECC>&#10;            &#60;ECState Name=&#34;START&#34; Comment=&#34;Initial State&#34; x=&#34;555.55554&#34; y=&#34;427.77777&#34;>&#10;            &#60;/ECState>&#10;            &#60;ECState Name=&#34;INIT&#34; Comment=&#34;Initialization&#34; x=&#34;922.22217&#34; y=&#34;138.88889&#34;>&#10;                &#60;ECAction Algorithm=&#34;INIT&#34; Output=&#34;INITO&#34; />&#10;            &#60;/ECState>&#10;            &#60;ECState Name=&#34;REQ&#34; Comment=&#34;Normal execution&#34; x=&#34;216.66666&#34; y=&#34;755.55554&#34;>&#10;                &#60;ECAction Algorithm=&#34;REQ&#34; Output=&#34;CNF&#34; />&#10;            &#60;/ECState>&#10;            &#60;ECTransition Source=&#34;START&#34; Destination=&#34;INIT&#34; Condition=&#34;INIT&#34; x=&#34;922.22217&#34; y=&#34;427.77777&#34; />&#10;            &#60;ECTransition Source=&#34;INIT&#34; Destination=&#34;START&#34; Condition=&#34;1&#34; x=&#34;555.55554&#34; y=&#34;138.88889&#34; />&#10;            &#60;ECTransition Source=&#34;START&#34; Destination=&#34;REQ&#34; Condition=&#34;REQ&#34; x=&#34;555.55554&#34; y=&#34;588.88885&#34; />&#10;            &#60;ECTransition Source=&#34;REQ&#34; Destination=&#34;START&#34; Condition=&#34;1&#34; x=&#34;216.66666&#34; y=&#34;427.77777&#34; />&#10;        &#60;/ECC>&#10;        &#60;Algorithm Name=&#34;INIT&#34; Comment=&#34;Initialization algorithm&#34;>&#10;            &#60;Other Language=&#34;Java&#34; Text=&#34;Block.value=false;&#38;#10;TokenOut.value=false;&#38;#10;System.out.println(&#38;#34;init head, grant false, token true&#38;#34;);&#38;#10;&#34; />&#10;        &#60;/Algorithm>&#10;        &#60;Algorithm Name=&#34;REQ&#34; Comment=&#34;Normally executed algorithm&#34;>&#10;            &#60;Other Language=&#34;Java&#34; Text=&#34;System.out.println(&#38;#34;3LastTokenIn, TokenIn, TokenOut:&#38;#34; + lastTokenIn.value + TokenIn.value + TokenOut.value);&#38;#10;&#38;#10;if(lastTokenIn.value) {&#38;#10;if (lastTokenIn.value != TokenIn.value) {&#38;#10; if (!PERequest.value) {&#38;#10;  Block.value = false;&#38;#10;  TokenOut.value = false;&#38;#10;  System.out.println(&#38;#34;Conv 3: I just got token, request is coming let bag go and keep token&#38;#34;);&#38;#10; } else {&#38;#10;  Block.value = false;&#38;#10;  TokenOut.value = true;&#38;#10;  System.out.println(&#38;#34;Conv 3: I just got token, no request so run conveyer but let token go&#38;#34;);&#38;#10; }&#38;#10;} else {&#38;#10; if (!PERequest.value) {&#38;#10;  System.out.println(&#38;#34;Conv 3: I had token for a while, request here and bag passed eye, keep running conv and keep token&#38;#34;);&#38;#10;  Block.value = false;&#38;#10;  TokenOut.value = false;&#38;#10; } else {&#38;#10;  if (PEExit.value) {&#38;#10;   Block.value = false;&#38;#10;   TokenOut.value = true;&#38;#10;   System.out.println(&#38;#34;Conv 3: I had token for a while, no requests and bag passed eye, let token go&#38;#34;);&#38;#10;  } else {&#38;#10;   Block.value = false;&#38;#10;   TokenOut.value = false;&#38;#10;   System.out.println(&#38;#34;Conv 3: I have token, no requests and bag not passed eye yet, keep token&#38;#34;);&#38;#10;  }&#38;#10; }&#38;#10;}&#38;#10;}&#38;#10;&#38;#10;else {&#38;#10;    if (!PERequest.value) {&#38;#10; Block.value = true;&#38;#10;TokenOut.value = true;&#38;#10; System.out.println(&#38;#34;Conv 3: No token, rquest here. Wait&#38;#34;);&#38;#10;    }&#38;#10;else {&#38;#10;Block.value = false;&#38;#10;System.out.println(&#38;#34;Conv 3: No token no request&#38;#34;);&#38;#10;}&#38;#10;}&#38;#10;lastTokenIn.value = TokenIn.value;&#38;#10;&#34; />&#10;        &#60;/Algorithm>&#10;    &#60;/BasicFB>&#10;&#60;/FBType>&#10;&#10;&#10;System.out.println(&#34;3LastTokenIn, TokenIn, TokenOut:&#34; + lastTokenIn.value + TokenIn.value + TokenOut.value);&#10;&#10;if(lastTokenIn.value) {&#10;if (TokenChanged) {&#10; if (!PERequest.value) {&#10;  Block.value = false;&#10;  TokenOut.value = false;&#10;  System.out.println(&#34;Conv 3: I just got token, request is coming let bag go and keep token&#34;);&#10; } else {&#10;  Block.value = false;&#10;  TokenOut.value = true;&#10;  System.out.println(&#34;Conv 3: I just got token, no request so run conveyer but let token go&#34;);&#10; }&#10;} else {&#10; if (!PERequest.value) {&#10;  System.out.println(&#34;Conv 3: I had token for a while, request here and bag passed eye, keep running conv and keep token&#34;);&#10;  Block.value = false;&#10;  TokenOut.value = false;&#10; } else {&#10;  if (PEExit.value) {&#10;   Block.value = false;&#10;   TokenOut.value = true;&#10;   System.out.println(&#34;Conv 3: I had token for a while, no requests and bag passed eye, let token go&#34;);&#10;  } else {&#10;   Block.value = false;&#10;   TokenOut.value = false;&#10;   System.out.println(&#34;Conv 3: I have token, no requests and bag not passed eye yet, keep token&#34;);&#10;  }&#10; }&#10;}&#10;}&#10;&#10;else {&#10;    if (!PERequest.value) {&#10; Block.value = true;&#10;TokenOut.value = true;&#10; System.out.println(&#34;Conv 3: No token, rquest here. Wait&#34;);&#10;    }&#10;else {&#10;Block.value = false;&#10;System.out.println(&#34;Conv 3: No token no request&#34;);&#10;}&#10;}&#10;&#10;if(lastTokenIn.value != TokenIn.value) {&#10;    TokenChanged = true;&#10;}&#10;else {&#10;    TokenChanged = false;&#10;}&#10;lastTokenIn.value = TokenIn.value;&#10;" />
  </Algorithm>
  </BasicFB>
</FBType>
